package com.cognibank.usermng.usermngspringmicroserviceapp.repository;

import com.cognibank.usermng.usermngspringmicroserviceapp.model.User;
import com.cognibank.usermng.usermngspringmicroserviceapp.model.UserDetails;
import com.cognibank.usermng.usermngspringmicroserviceapp.model.UserType;
import org.hibernate.exception.ConstraintViolationException;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

@RunWith(SpringRunner.class)
@SpringBootTest
public class UserRepositoryTest {


    @Autowired
    private UserRepository userRepository;

    @Test
    public void createNewUser() {
        User newUser = new User();
        List<UserDetails> detailsList = new ArrayList<>();
        detailsList.add(new UserDetails()
                .withUser(newUser)
                .withFieldName("FirstName")
                .withFieldValue("Foo"));
        detailsList.add(new UserDetails()
                .withUser(newUser)
                .withFieldName("LastName")
                .withFieldValue("Bar"));
        newUser.withType(UserType.Manager)
                .withUserName("foobar")
                .withPassword("test")
                .withUserDetails(detailsList)
                .withActive(true);

        newUser = userRepository.save(newUser);
        assertNotNull("User should have an autogenerated ID", newUser.getId());
    }

    @Test(expected = DataIntegrityViolationException.class)
    public void cannotCreateSameFieldMoreThanOnceForAUser() {
        User newUser = new User();
        List<UserDetails> detailsList = new ArrayList<>();
        detailsList.add(new UserDetails()
                .withUser(newUser)
                .withFieldName("FirstName")
                .withFieldValue("Fooa"));
        detailsList.add(new UserDetails()
                .withUser(newUser)
                .withFieldName("FirstName")
                .withFieldValue("Fooa"));
        newUser.withType(UserType.Manager)
                .withUserName("foobar11")
                .withPassword("test")
                .withUserDetails(detailsList)
                .withActive(true);

        newUser = userRepository.save(newUser);
        assertNotNull("User should have an autogenerated ID", newUser.getId());
    }

    @Test(expected = DataIntegrityViolationException.class)
    public void userNameUniquenessTest(){
        User user1 = new User()
                .withUserName("alok")
                .withActive(true)
                .withType(UserType.User)
                .withPassword("asjdhfksj");
        User user2 = new User()
                .withUserName("alok")
                .withActive(true)
                .withType(UserType.Manager)
                .withPassword("asdfas");
        user1 = userRepository.save(user1);
        user2 = userRepository.save(user2);

    }
}